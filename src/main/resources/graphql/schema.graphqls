type User{
    id: ID!,
    name: String!,
    email: String!,
    access: String!,
    refresh: String!,
    books: [Book],
}

input UserInput{
    name: String,
    email: String!,
    password: String!
}

type Book{
    id: ID!,
    name: String!,
    author: Author!,
}

type BookResponse{
    id: ID!,
    user: User,
    book: Book,
    author: Author,
    status: String,
}

input BookInput{
    userid: ID!,
    name: String!,
    author: String!,
    status: String!
}

type Author{
    id: ID!
    name:String!
    books: [Book]
}

type Query{
    loginUser(input:UserInput!):User!
    fetchBooksById(id:ID!): Book
    fetchBooksByUserId(userId:ID!):[BookResponse]
    fetchBooksByAuthor(id:ID!):[Book]
}

type Mutation{
    addUser(input:UserInput!): ID!
    addBook(input: BookInput) : BookResponse
}